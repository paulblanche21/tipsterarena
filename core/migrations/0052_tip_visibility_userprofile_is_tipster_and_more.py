# Generated by Django 5.2 on 2025-05-06 16:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0051_alter_userprofile_handle'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='tip',
            name='visibility',
            field=models.CharField(choices=[('public', 'Public'), ('followers', 'Followers Only'), ('subscribers', 'All Subscribers'), ('tier', 'Specific Tier')], default='public', max_length=20),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_tipster',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='maximum_tier_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='minimum_tier_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='subscription_revenue',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='tipster_description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='tipster_rules',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='total_subscribers',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='TipsterTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField()),
                ('features', models.JSONField(default=list)),
                ('max_subscribers', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_tiers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('tipster', 'name')},
            },
        ),
        migrations.AddField(
            model_name='tip',
            name='required_tier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exclusive_tips', to='core.tipstertier'),
        ),
        migrations.CreateModel(
            name='TipsterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('auto_renew', models.BooleanField(default=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipster_subscriptions', to=settings.AUTH_USER_MODEL)),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='core.tipstertier')),
            ],
            options={
                'unique_together': {('subscriber', 'tier')},
            },
        ),
    ]
