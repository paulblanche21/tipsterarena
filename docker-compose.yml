services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: tipsterarena
      POSTGRES_USER: admin
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    secrets:
      - db-password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d tipsterarena"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  npm:
    build:
      context: .
      target: development
    command: sh -c "npm install && npm run dev"
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      VITE_HOST: 0.0.0.0
      VITE_PORT: 3000

  web:
    build:
      context: .
      target: python
    command: >
      sh -c "echo 'Starting migrations...' &&
             python3 manage.py migrate &&
             echo 'Collecting static files...' &&
             python3 manage.py collectstatic --noinput --clear &&
             echo 'Starting Daphne server...' &&
             daphne -v 2 -b 0.0.0.0 -p 8000 tipsterarena.asgi:application"
    volumes:
      - .:/app
      - /app/node_modules
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      npm:
        condition: service_started
    environment:
      DB_HOST: db
      DB_NAME: tipsterarena
      DB_USER: admin
      DB_PASSWORD_FILE: /run/secrets/db-password
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: tipsterarena.settings
      DEBUG: "True"
      ALLOWED_HOSTS: "*"
      DJANGO_VITE_DEV_MODE: "True"
      NODE_ENV: "development"
      PYTHONUNBUFFERED: "1"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    secrets:
      - db-password

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
      - npm

volumes:
  postgres_data:
  static_volume:
  media_volume:

secrets:
  db-password:
    file: db/password.txt